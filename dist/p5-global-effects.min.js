class Effects{constructor(t){this.context=t,console.log("Effects running")}randomOffset(t,e){return t+this.context.random(-e,e)}randomZeroOne(){return this.context.random(0,1)}randomProb(){return this.randomZeroOne()>.5}givenProb(t){return this.randomZeroOne()>t}fuzzyValue(t){return this.randomProb()?this.randomOffset(t,10):this.context.random(t)}randomShaped(t,e){const o=this.context.random(t,e),r=this.context.random(t,e),h=this.context.random(t,e);return this.context.color(o,r,h)}randomColor(){return this.randomShaped(0,255)}randomBrightColor(){return this.randomShaped(155,255)}randomDarkColor(){return this.randomShaped(0,90)}shadedColor(t){const e=this.randomOffset(this.context.red(t),10),o=this.randomOffset(this.context.green(t),10),r=this.randomOffset(this.context.blue(t),10);return this.context.color(e,o,r)}shadedColorOff(t,e){const o=this.randomOffset(this.context.red(t),e),r=this.randomOffset(this.context.green(t),e),h=this.randomOffset(this.context.blue(t),e);return this.context.color(o,r,h)}randomPalette(t,e){const o=[t];for(let t=1;t<e;t+=1)o[t]=this.randomColor();return o}relatedPalette(t,e){const o=[t];for(let r=1;r<e;r+=1)o[r]=this.shadedColorOff(t,50);return o}stripes(t,e){const o=this.context.createGraphics(t,t);for(let t=0;t<o.width;t+=1){const r=this.context.map(t,0,o.width,0,e.length),h=e[this.context.floor(r)],i=this.context.random(e),n=this.randomProb()?h:i;o.stroke(this.shadedColor(n)),o.line(t,0,t,o.height)}return o}dots(t,e){const o=this.context.createGraphics(t,t);o.background(this.context.random(e)),o.noStroke();for(let r=0;r<t;r+=1){const r=this.shadedColor(this.context.random(e)),h=this.context.random(o.width),i=this.context.random(o.height),n=this.context.random(.3*t);o.fill(r),o.circle(h,i,n)}return o}hatchHorizontal(t,e,o){const r=this.context.createGraphics(t,e),h=r.height*o;for(let t=0;t<r.height;t+=h)r.line(0,t,r.width,t);return r}hatchVertical(t,e,o){const r=this.context.createGraphics(t,e),h=r.width*o;for(let t=0;t<r.width;t+=h)r.line(t,0,t,r.height);return r}hatchGrid(t,e,o){const r=this.context.createGraphics(t,e);return r.image(this.hatchHorizontal(t,e,o),0,0),r.image(this.hatchVertical(t,e,o),0,0),r}randomBlurX(t){const e=this.context.createGraphics(t.width,t.height),o=t.get();e.loadPixels();for(let r=0;r<t.height;r+=1)for(let h=0;h<t.width;h+=1){const t=this.context.floor(this.context.random(h)),i=o.get(t,r);e.set(h,r,i)}return e.updatePixels(),e}fuzzyBlurX(t){const e=this.context.createGraphics(t.width,t.height),o=t.get();e.loadPixels();for(let r=0;r<t.width;r+=1)for(let h=0;h<t.height;h+=1){const t=o.get(this.fuzzyValue(r),h);e.set(r,h,t)}return e.updatePixels(),e}mosaic(t){const e=this.context.createGraphics(t.width,t.height),o=t.get();e.noStroke();const r=t.width/100;for(let h=0;h<t.width;h+=r)for(let i=0;i<t.height;i+=r){const t=o.get(h,i);e.fill(t),e.rect(h,i,r,r)}return e}shiftedPixels(t){const e=[];for(let o=0;o<t.width;o+=1){const r=[];for(let e=0;e<t.height;e+=1)r.push(t.get(o,e));e.push(r)}const o=this.context.createGraphics(t.width,t.height);for(let t=0;t<o.width;t+=1){const r=this.context.floor(this.context.random(.5*o.width)),h=[],i=e[t].length;for(let o=i-r;o<i;o+=1)h.push(e[t][o]);for(let o=r;o<i-r;o+=1)h.push(e[t][o]);for(let o=0;o<r;o+=1)h.push(e[t][o]);e[t]=this.randomProb()?h.sort():h}o.loadPixels();for(let t=0;t<o.width;t+=1)for(let r=0;r<o.height;r+=1)o.set(t,r,e[t][r]);return o.updatePixels(),o}glitchArea(t){const e=this.context.createGraphics(t.width,t.height);e.loadPixels();for(let o=0;o<e.width;o+=1){const r=[];for(let e=0;e<t.height;e+=1)r.push(t.get(o,e));r.sort();for(let t=0;t<e.height;t+=1)e.set(o,t,r[t])}return e.updatePixels(),e}glitchY(t){const e=this.context.createGraphics(t.width,t.height);e.image(t,0,0);for(let o=0;o<550;o+=1){const o=this.context.random(t.width),r=this.context.random(t.height),h=this.context.random(-20,20),i=this.context.floor(this.context.random(1,100)),n=this.context.floor(this.context.random(1,100)),s=t.get(o,r,i,n);e.image(this.glitchArea(s),o+h,r)}return e}randomLight(t){return t.pointLight(255,255,255,this.context.random(.5*-t.width,.5*t.width),this.context.random(.5*-t.height,.5*t.height),this.context.random(.5*-t.width,.5*t.width))}randomColoredLight(t,e){const o=this.context.red(e),r=this.context.green(e),h=this.context.blue(e),i=this.context.random(.5*-t.width,.5*t.width),n=this.context.random(.5*-t.height,.5*t.height),s=this.context.random(.5*-t.width,.5*t.width);return t.pointLight(o,r,h,i,n,s)}grainMask(t,e){const o=t.get(),r=this.context.createGraphics(t.width,t.height);for(let t=0;t<r.width;t+=1)for(let o=0;o<r.height;o+=1)this.givenProb(e)&&r.point(t,o);return o.mask(r.get()),o}linesMask(t,e){const o=t.get(),r=this.context.createGraphics(t.width,t.height);for(let t=0;t<r.height;t+=1)this.givenProb(e)&&r.line(0,t,r.width,t);return o.mask(r.get()),o}}
